name: Rust Build, Test, and Conditional Release

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-conditional-release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    # Set up Rust environment
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    # Extract version from Cargo.toml, but only for pushes to master
    - name: Extract version
      if: github.event_name == 'push'
      run: |
        echo "CARGO_VERSION=$(grep '^version' Cargo.toml | head -1 | sed -E 's/[^0-9.]+//g')" >> $GITHUB_ENV

    # Build the Rust project
    - name: Build
      run: cargo build --release

    # Conditionally publish the binary as a GitHub Release only on push to master
    - name: Create Release
      if: github.event_name == 'push'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.CARGO_VERSION }}
        release_name: Release v${{ env.CARGO_VERSION }}
        draft: false
        prerelease: false

    # Conditionally upload the binary and config file to the release only on push to master
    - name: Upload Binary Asset
      if: github.event_name == 'push'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/release/stratagem_engine.exe
        asset_name: stratagem_engine.exe
        asset_content_type: application/octet-stream

    - name: Upload Config File Asset
      if: github.event_name == 'push'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./stratagems.toml
        asset_name: stratagems.toml
        asset_content_type: text/plain
